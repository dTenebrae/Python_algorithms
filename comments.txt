### Урок 1
#### Задание 1.1

1. Выполнить логические побитовые операции «И», «ИЛИ» и др. над
числами 5 и 6. Выполнить над числом 5 побитовый сдвиг вправо и влево
на два знака.

#### Задание 1.2

По введенным пользователем координатам двух точек вывести уравнение прямой
вида y = kx + b, проходящей через эти точки.

#### Задание 1.3

Написать программу, которая генерирует в указанных пользователем границах:
a. случайное целое число,
b. случайное вещественное число,
c. случайный символ.
Для каждого из трех случаев пользователь задает свои границы диапазона.
Например, если надо получить случайный символ от 'a' до 'f', то вводятся эти
символы. Программа должна вывести на экран любой символ алфавита
от 'a' до 'f' включительно.

#### Задание 1.4

Пользователь вводит две буквы. Определить, на каких местах алфавита они
стоят, и сколько между ними находится букв.

#### Задание 1.5

Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

#### Задание 1.6

По длинам трех отрезков, введенных пользователем, определить возможность
существования треугольника, составленного из этих отрезков. Если такой
треугольник существует, то определить, является ли он разносторонним,
равнобедренным или равносторонним.

#### Задание 1.7

Определить, является ли год, который ввел пользователь,
високосным или не високосным.

#### Задание 1.8

Вводятся три разных числа. Найти, какое из них является средним
(больше одного, но меньше другого).

### Урок 2
#### Задание 2.1

Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не завершается, а запрашивает новые данные для
вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака
операции. Если пользователь вводит неверный знак (не '0', '+', '-', '', '/'),
программа должна сообщать об ошибке и снова запрашивать знак операции. Также
она должна сообщать пользователю о невозможности деления на ноль, если он
ввел его в качестве делителя.

#### Задание 2.2

Посчитать четные и нечетные цифры введенного натурального числа. Например,
если введено число 34560, в нем 3 четные цифры (4, 6 и 0) и 2 нечетные
(3 и 5).

#### Задание 2.3

Сформировать из введенного числа обратное по порядку входящих в него цифр
и вывести на экран. Например, если введено число 3486, надо вывести 6843.

#### Задание 2.4

Найти сумму n элементов следующего ряда чисел: 1, -0.5, 0.25, -0.125,…
Количество элементов (n) вводится с клавиатуры.

#### Задание 2.5

Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером
32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме:
по десять пар «код-символ» в каждой строке.

#### Задание 2.6

В программе генерируется случайное целое число от 0 до 100. Пользователь
должен его отгадать не более чем за 10 попыток. После каждой неудачной
попытки должно сообщаться, больше или меньше введенное пользователем число,
чем то, что загадано. Если за 10 попыток число не отгадано, вывести ответ.

#### Задание 2.7

Написать программу, доказывающую или проверяющую, что для множества
натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2, где n — любое
натуральное число.

#### Задание 2.8

Посчитать, сколько раз встречается определенная цифра в введенной
последовательности чисел. Количество вводимых чисел и цифра, которую
необходимо посчитать, задаются вводом с клавиатуры.

#### Задание 2.9

Среди натуральных чисел, которые были введены, найти наибольшее по сумме
цифр. Вывести на экран это число и сумму его цифр.

### Урок 3
#### Задание 3.1

В диапазоне натуральных чисел от 2 до 99 определить, сколько из
них кратны каждому из чисел в диапазоне от 2 до 9.
Примечание: 8 разных ответов.

#### Задание 3.2

Во втором массиве сохранить индексы четных элементов первого массива.
Например, если дан массив со значениями 8, 3, 15, 6, 4, 2, второй массив
надо заполнить значениями 0, 3, 4, 5 (помните, что индексация начинается с
нуля), т. к. именно в этих позициях первого массива стоят четные числа.

#### Задание 3.3

В массиве случайных целых чисел поменять местами минимальный и максимальный
элементы.

#### Задание 3.4

Определить, какое число в массиве встречается чаще всего

#### Задание 3.5

В массиве найти максимальный отрицательный элемент. Вывести на экран его
значение и позицию в массиве.
Примечание к задаче: пожалуйста не путайте «минимальный» и
«максимальный отрицательный». Это два абсолютно разных значения.

#### Задание 3.6

В одномерном массиве найти сумму элементов, находящихся между минимальным и
максимальным элементами. Сами минимальный и максимальный элементы в сумму не
включать.

#### Задание 3.7

В одномерном массиве целых чисел определить два наименьших элемента. Они
могут быть как равны между собой (оба минимальны), так и различаться.

#### Задание 3.8

Матрица 5x4 заполняется вводом с клавиатуры, кроме последних элементов
строк. Программа должна вычислять сумму введенных элементов каждой строки и
записывать ее в последнюю ячейку строки. В конце следует вывести
полученную матрицу.

#### Задание 3.9

Найти максимальный элемент среди минимальных элементов столбцов матрицы

### Урок 4
#### Задание 4.1

В массиве случайных целых чисел поменять местами минимальный и максимальный
элементы.

### Урок 5
#### Задание 5.1

Пользователь вводит данные о количестве предприятий, их наименования и
прибыль за четыре квартала для каждого предприятия. Программа должна
определить среднюю прибыль (за год для всех предприятий) и отдельно вывести
наименования предприятий, чья прибыль выше среднего и ниже среднего.

#### Задание 5.2

Написать программу сложения и умножения двух шестнадцатеричных чисел.
При этом каждое число представляется как массив, элементы которого — цифры
числа.
Например, пользователь ввёл A2 и C4F. Нужно сохранить их как [‘A’, ‘2’] и
[‘C’, ‘4’, ‘F’] соответственно. Сумма чисел из примера: [‘C’, ‘F’, ‘1’],
произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

### Урок 6
#### Задание 6.1

В диапазоне натуральных чисел от 2 до 99 определить, сколько из
них кратны каждому из чисел в диапазоне от 2 до 9.
Примечание: 8 разных ответов.

#### Задание 6.2

В одномерном массиве целых чисел определить два наименьших элемента. Они
могут быть как равны между собой (оба минимальны), так и различаться.

#### Задание 6.3

В одномерном массиве найти сумму элементов, находящихся между минимальным и
максимальным элементами. Сами минимальный и максимальный элементы в сумму не
включать.

### Урок 7
#### Задание 7.1

1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными
числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка
пузырьком. Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

#### Задание 7.2

Отсортируйте по возрастанию методом слияния одномерный вещественный массив, заданный случайными
числами на промежутке [0; 50). Выведите на экран исходный и отсортированный массивы.

#### Задание 7.3

Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве
медиану. Медианой называется элемент ряда, делящий его на две равные части: в одной находятся
элементы, которые не меньше медианы, в другой — не больше медианы.
Примечание: задачу можно решить без сортировки исходного массива. Но если это слишком сложно,
используйте метод сортировки, который не рассматривался на уроках (сортировка слиянием также
недопустима).

### Урок 8
#### Задание 8.1

На улице встретились N друзей. Каждый пожал руку всем остальным друзьям (по одному разу). Сколько
рукопожатий было?
Примечание. Решите задачу при помощи построения графа.

#### Задание 8.2

Доработать алгоритм Дейкстры (рассматривался на уроке), чтобы он дополнительно возвращал список
вершин, которые необходимо обойти.

#### Задание 8.3

Написать программу, которая обходит не взвешенный ориентированный граф без петель, в котором
все вершины связаны, по алгоритму поиска в глубину (Depth-First Search).
Примечания:
a. граф должен храниться в виде списка смежности;
b. генерация графа выполняется в отдельной функции, которая принимает на вход число вершин.

### Урок 9
#### Задание 9.1

Определение количества различных подстрок с использованием хеш-функции. Пусть на вход функции
дана строка. Требуется вернуть количество различных подстрок в этой строке.
Примечания:
* в сумму не включаем пустую строку и строку целиком;
* без использования функций для вычисления хэша (hash(), sha1() или любой другой из модуля
hashlib задача считается не решённой.

#### Задание 9.2

Закодируйте любую строку по алгоритму Хаффмана
- Символы входного алфавита образуют список свободных узлов. Каждый лист имеет вес, который может
быть равен либо вероятности, либо количеству вхождений символа в сжимаемое сообщение.
- Выбираются два свободных узла дерева с наименьшими весами.
- Создается их родитель с весом, равным их суммарному весу.
- Родитель добавляется в список свободных узлов, а два его потомка удаляются из этого списка.
- Одной дуге, выходящей из родителя, ставится в соответствие бит 1, другой — бит 0. Битовые
значения ветвей, исходящих от корня, не зависят от весов потомков.
- Шаги, начиная со второго, повторяются до тех пор, пока в списке свободных узлов не останется
только один свободный узел. Он и будет считаться корнем дерева.

